<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.visit.dao.VisitorMapper">

	<select id="getList" resultType="visitorDto">
		<![CDATA[
		SELECT * FROM VISITOR
		]]>
	</select>
	
	<select id="getChartByTimeOld" parameterType="visitorDto" resultType="visitorDto">
		<![CDATA[
		SELECT 
			SUBSTR(VISIT_TIME, 12, 2) SUB_VISIT_TIME, 
			COUNT(*) as COUNT_VISIT 
		FROM 
			VISITOR 
		WHERE
			1 = 1
		]]>
		<if test='startDate != null and startDate != ""'>
			<![CDATA[
  			AND VISIT_TIME >= #{startDate}
			]]>
		</if>
		<if test='endDate != null and endDate != ""'>
			<![CDATA[
  			AND VISIT_TIME <= #{endDate}
			]]>
		</if>
		<![CDATA[
		GROUP BY 
				SUB_VISIT_TIME
		]]>
	</select>
	
	<select id="getChartByTime" parameterType="visitorDto" resultType="visitorDto">
		<![CDATA[
		WITH T AS( 
			SELECT '00' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '01' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '02' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '03' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '04' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '05' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '06' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '07' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '08' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '09' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '10' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '11' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '12' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '13' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '14' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '15' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '16' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '17' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '18' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '19' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '20' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '21' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '22' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
			UNION ALL  SELECT '23' SUB_VISIT_TIME, 1 COUNT_VISIT FROM DUAL
		)
		SELECT
			T.SUB_VISIT_TIME,
        	NVL(V.COUNT_VISIT, 0) COUNT_VISIT
		FROM
      		T
    		LEFT JOIN (
    			SELECT 
    				SUBSTR(VISIT_TIME, 12, 2) SUB_VISIT_TIME, 
    				NVL(COUNT(*), 0) AS COUNT_VISIT 
    			FROM 
    				VISITOR
    			WHERE
    				1 = 1
    			]]>
    			<if test='startDate != null and startDate != ""'>
					<![CDATA[
		  			AND VISIT_TIME >= #{startDate}
					]]>
				</if>
				<if test='endDate != null and endDate != ""'>
					<![CDATA[
		  			AND VISIT_TIME <= #{endDate}
					]]>
				</if>
				<![CDATA[
    			GROUP BY SUB_VISIT_TIME
    			) V
           		ON V.SUB_VISIT_TIME = T.SUB_VISIT_TIME
				]]>
	</select>
	
	<insert id="saveVisitor">
		<![CDATA[
		INSERT INTO VISITOR (
			VISIT_SEQ,
			VISIT_ID,
			VISIT_IP,
			VISIT_ADDR,
			VISIT_TIME,
			VISIT_REFER,
			VISIT_AGENT,
			PRODUCT,
			PRODUCT_V,
			SYSTEM,
			SYSTEM_V,
			PLATFORM,
			PLATFORM_V,
			EXT
		) VALUES (
			#{visitSeq},
			#{visitId},
			#{visitIp},
			#{visitAddr},
			#{visitTime},
			#{visitRefer},
			#{visitAgent},
			#{product},
			#{productV},
			#{system},
			#{systemV},
			#{platform},
			#{platformV},
			#{ext}
		)
		]]>
	</insert>
	
	<select id="getVisitSeq" resultType="Long">
		<![CDATA[
		SELECT 
			NVL(COUNT(VISIT_SEQ), 0) + 1
		FROM
			VISITOR
		]]>
	</select>
</mapper>